<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="RefundProduct">
    
    <resultMap id="refundProductResult" type="refundProduct">
        <result property="id" column="id" />
        <result property="orderCode" column="orderCode" />
        <result property="refundCode" column="refundCode" />
        <result property="oldProductCode" column="oldProductCode" />
        <result property="productCode" column="productCode" />
        <result property="productCount" column="productCount" />
        <result property="refundType" column="refundType" />
        <result property="deleteYn" column="deleteYn" />
        <result property="disabledYn" column="disabledYn" />
        <result property="createUser" column="createUser" />
        <result property="createTime" column="createTime" />
        <result property="updateUser" column="updateUser" />
        <result property="updateTime" column="updateTime" />
    </resultMap>
    
    
     <resultMap id="productResult" type="product">
        <result property="id" column="id" />
        <result property="code" column="code" />
        <result property="showCode" column="showCode" />
        <result property="outPrdCode" column="outPrdCode" />
        <result property="title" column="title" />
        <result property="prdCatCode" column="prdCatCode" />
        <result property="brandCode" column="brandCode" />
        <result property="standard" column="standard" />
        <result property="features" column="features" />
        <result property="count" column="count" />
        <result property="supplyPrice" column="supplyPrice" />
        <result property="supplierId" column="supplierId" />
        <result property="inventory" column="inventory"/>
    </resultMap>
    
    <!-- 用于select查询公用抽取的列 -->
    <sql id="refundProductColumns">
        <![CDATA[
        T1.id,
        T1.orderCode,
        T1.refundCode,
        T1.oldProductCode,
        T1.productCode,
        T1.productCount,
        T1.refundType,
        T1.deleteYn,
        T1.disabledYn,
        T1.createUser,
        T1.createTime,
        T1.updateUser,
        T1.updateTime
        ]]>
    </sql>
    
    <!-- 查询from -->
    <sql id="dynamicFrom">
        FROM TBL_Refund_Product T1
    </sql>
    
    <!-- 查询选择colum -->
    <sql id="dynamicSelect">
        SELECT
        <include refid="refundProductColumns" />
        <include refid="dynamicFrom" />
    </sql>
    
    <!-- 查询条件 -->
    <sql id="dynamicCondition">
        <!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用framework中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
        <if test="id != null">
            AND T1.id = #{id}
        </if>
        <if test="idEx != null">
            AND T1.id != #{idEx}
        </if>
        <if test="@Ognl@isNotEmpty(orderCode)">
            AND T1.orderCode = #{orderCode}
        </if>
        <if test="@Ognl@isNotEmpty(refundCode)">
            AND T1.refundCode = #{refundCode}
        </if>
        <if test="@Ognl@isNotEmpty(oldProductCode)">
            AND T1.oldProductCode = #{oldProductCode}
        </if>
        <if test="@Ognl@isNotEmpty(productCode)">
            AND T1.productCode = #{productCode}
        </if>
        <if test="productCount != null">
            AND T1.productCount = #{productCount}
        </if>
        <if test="refundType != null">
            AND T1.refundType = #{refundType}
        </if>
        <if test="@Ognl@isNotEmpty(deleteYn)">
            AND T1.deleteYn = #{deleteYn}
        </if>
        <if test="@Ognl@isNotEmpty(disabledYn)">
            AND T1.disabledYn = #{disabledYn}
        </if>
        <if test="@Ognl@isNotEmpty(createUser)">
            AND T1.createUser = #{createUser}
        </if>
        <if test="@Ognl@isNotEmpty(updateUser)">
            AND T1.updateUser = #{updateUser}
        </if>
    </sql>
    
    <!-- 查询where条件 -->
    <sql id="dynamicWhere">
        <where>
            <include refid="dynamicCondition" />
        </where>
    </sql>
    
    <!-- 查询where条件(map) -->
    <sql id="dynamicWhereEx">
        <where>
            <include refid="dynamicCondition" />
            <if test="@Ognl@isNotEmpty(createTimeBegin)">
                <![CDATA[AND T1.createTime >= #{createTimeBegin}]]>
            </if>
            <if test="@Ognl@isNotEmpty(createTimeEnd)">
                <![CDATA[AND T1.createTime < date_add(#{createTimeEnd}, INTERVAL 1 DAY)]]>
            </if>
            <if test="@Ognl@isNotEmpty(updateTimeBegin)">
                <![CDATA[AND T1.updateTime >= #{updateTimeBegin}]]>
            </if>
            <if test="@Ognl@isNotEmpty(updateTimeEnd)">
                <![CDATA[AND T1.updateTime < date_add(#{updateTimeEnd}, INTERVAL 1 DAY)]]>
            </if>
        </where>
    </sql>

    <!-- 排序条件 -->
    <sql id="dynamicOrderBy">
        <choose>
            <when test="@Ognl@isNotEmpty(orderBy)">
                <trim suffix="" suffixOverrides="order by">
                <foreach collection="orderBy" item="order" open="order by " separator="," close=" ">
                <choose>
                    <when test="order.propertyName == 'id'">
                        T1.id <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'id'">
                        T1.id <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'orderCode'">
                        T1.orderCode <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'refundCode'">
                        T1.refundCode <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'oldProductCode'">
                        T1.oldProductCode <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'productCode'">
                        T1.productCode <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'productCount'">
                        T1.productCount <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'refundType'">
                        T1.refundType <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'deleteYn'">
                        T1.deleteYn <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'disabledYn'">
                        T1.disabledYn <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'createUser'">
                        T1.createUser <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'createTime'">
                        T1.createTime <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'updateUser'">
                        T1.updateUser <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'updateTime'">
                        T1.updateTime <if test="!order.ascending"> desc </if>
                    </when>
                </choose>
                </foreach>
                </trim>
            </when>
            <otherwise>
            order by T1.id desc
            </otherwise>
        </choose>
    </sql>
    
    <!-- 单条录入  -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
            INSERT INTO TBL_Refund_Product (
            orderCode ,
            refundCode ,
            oldProductCode ,
            productCode ,
            productCount ,
            refundType ,
            deleteYn ,
            disabledYn ,
            createUser ,
            createTime ,
            updateUser ,
            updateTime 
            ) VALUES (
            #{orderCode} ,
            #{refundCode} ,
            #{oldProductCode} ,
            #{productCode} ,
            #{productCount} ,
            #{refundType} ,
            #{deleteYn} ,
            #{disabledYn} ,
            #{createUser} ,
            #{createTime} ,
            #{updateUser} ,
            #{updateTime} 
            )
        ]]>
        <selectKey resultType="java.lang.Long"
            order="AFTER"
            keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
    
    <!-- 批量录入  -->
    <insert id="insertBatch" parameterType="java.util.List">
        INSERT INTO TBL_Refund_Product (
            orderCode ,
            refundCode ,
            oldProductCode ,
            productCode ,
            productCount ,
            refundType ,
            deleteYn ,
            disabledYn ,
            createUser ,
            createTime ,
            updateUser ,
            updateTime 
            ) 
            VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.orderCode} ,
            #{item.refundCode} ,
            #{item.oldProductCode} ,
            #{item.productCode} ,
            #{item.productCount} ,
            #{item.refundType} ,
            #{item.deleteYn} ,
            #{item.disabledYn} ,
            #{item.createUser} ,
            #{item.createTime} ,
            #{item.updateUser} ,
            #{item.updateTime} 
            )
        </foreach>
    </insert>
    
    <!-- 单条修改  -->
    <update id="update">
        UPDATE TBL_Refund_Product
        <set>
            <if test="@Ognl@isNotEmpty(orderCode)">
                orderCode = #{orderCode},
            </if>
            <if test="@Ognl@isNotEmpty(refundCode)">
                refundCode = #{refundCode},
            </if>
            <if test="@Ognl@isNotEmpty(oldProductCode)">
                oldProductCode = #{oldProductCode},
            </if>
            <if test="@Ognl@isNotEmpty(productCode)">
                productCode = #{productCode},
            </if>
            <if test="productCount != null">
                productCount = #{productCount},
            </if>
            <if test="refundType != null">
                refundType = #{refundType},
            </if>
            <if test="@Ognl@isNotEmpty(deleteYn)">
                deleteYn = #{deleteYn},
            </if>
            <if test="@Ognl@isNotEmpty(disabledYn)">
                disabledYn = #{disabledYn},
            </if>
            <if test="@Ognl@isNotEmpty(createUser)">
                createUser = #{createUser},
            </if>
            <if test="createTime != null">
                createTime = #{createTime},
            </if>
            <if test="@Ognl@isNotEmpty(updateUser)">
                updateUser = #{updateUser},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime}
            </if>
        </set>
        WHERE 
            id = #{id}
    </update>
    
    <!-- 单条修改所有属性  -->
    <update id="updateAll">
    <![CDATA[
        UPDATE TBL_Refund_Product SET
            orderCode = #{orderCode} ,
            refundCode = #{refundCode} ,
            oldProductCode = #{oldProductCode} ,
            productCode = #{productCode} ,
            productCount = #{productCount} ,
            refundType = #{refundType} ,
            deleteYn = #{deleteYn} ,
            disabledYn = #{disabledYn} ,
            createUser = #{createUser} ,
            createTime = #{createTime} ,
            updateUser = #{updateUser} ,
            updateTime = #{updateTime} 
        WHERE 
            id = #{id} 
    ]]>
    </update>

    <!-- 删除主键  -->
    <delete id="deleteByPK">
    <![CDATA[
        DELETE FROM TBL_Refund_Product WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <!-- 删除主键数组  -->
    <delete id="deleteByArrPK" parameterType="java.util.List">
        <![CDATA[DELETE FROM TBL_Refund_Product WHERE]]>
        <foreach collection="list" item="item" index="index" open="id in (" separator="," close=")">
            <![CDATA[#{item}]]>
        </foreach>
    </delete>
    
    <!-- 删除条件  -->
    <delete id="delete">
        <![CDATA[DELETE T1 FROM TBL_Refund_Product T1 ]]>
        <include refid="dynamicWhere" />
    </delete>
    
    <!-- 主键查询  -->
    <select id="selectByPK" parameterType="java.lang.Long" resultMap="refundProductResult">
        <include refid="dynamicSelect" />
        <![CDATA[
            WHERE 
            T1.id = #{id} 
        ]]>
    </select>
    
    <!-- 查询是否存在主键 -->
    <select id="existsByPK" parameterType="java.lang.Long"
        resultType="boolean">
        SELECT min(1)
        <include refid="dynamicFrom" />
        <![CDATA[
        WHERE
        T1.id = #{id} 
        ]]>
    </select>
    
    <!-- 查询是否存在对象 -->
    <select id="exists" parameterType="refundProduct"
        resultType="boolean">
        SELECT min(1)
        <include refid="dynamicFrom" />
        <include refid="dynamicWhere" />
    </select>
    
    <!-- 查询总数 -->
    <select id="count" resultType="int">
        SELECT count(1)
        <include refid="dynamicFrom" />
        <include refid="dynamicWhere" />
    </select>
    
    <!-- 查询总数参数Map -->
    <select id="countByMap" resultType="int" parameterType="map">
        SELECT count(1)
        <include refid="dynamicFrom" />
        <include refid="dynamicWhereEx" />
    </select>
    
    <!-- 分页查询数量 -->
    <select id="pageCount" resultType="int"
        parameterType="map">
        SELECT count(1)
        <include refid="dynamicFrom" />
        <include refid="dynamicWhereEx" />
    </select>
    
    <!-- 分页查询 -->
    <select id="pageQuery" resultMap="refundProductResult"
        parameterType="map">
        <include refid="Common.pageStart" />
        <include refid="dynamicSelect" />
        <include refid="dynamicWhereEx" />
        <include refid="dynamicOrderBy" />
        <include refid="Common.pageEnd" />
    </select>

    <!-- 查询条件Map -->
    <select id="selectByMap" resultMap="refundProductResult"
        parameterType="map">
        <include refid="dynamicSelect" />
        <include refid="dynamicWhereEx" />
        <include refid="dynamicOrderBy" />
    </select>

    <!-- 查询条件对象 -->
    <select id="select" resultMap="refundProductResult"
        parameterType="refundProduct">
        <include refid="dynamicSelect" />
        <include refid="dynamicWhere" />
        order by T1.id desc
    </select>

    <!-- 查询条件拼接 -->
    <select id="selectByCriteria" resultMap="refundProductResult"
        parameterType="map">
        <include refid="Common.pageStart" />
        <include refid="dynamicSelect" />
        <if test="_parameter != null">
            <include refid="Common.criteria_Where_Clause" />
        </if>
        <include refid="dynamicOrderBy" />
        <include refid="Common.pageEnd" />
    </select>
    
    
     <!-- 查询 -->
     <select id="selectRefundExchangeProductList" resultMap="productResult"
        parameterType="map">
      
      select  T2.id,T2.title,T2.features,T2.showCode,T2.standard,T2.outPrdCode,T2.supplyPrice,T2.supplierId, T1.productCount as count 
      ,T7.stockLevelCount as inventory
      
      from TBL_Refund_Product T1
      
      left join TBL_Product T2  on T1.productCode = T2.code
      
      left join 
        (SELECT T8.productCode,COUNT(*)as stockLevelCount ,SUM(amount) as inventory   from TBL_StockLevel T8 where  T8.disabledYn = 0 and T8.deleteYn = 0 
          GROUP BY T8.productCode)T7
                  on T1.productCode = T7.productCode
      
      <where>
           T1.deleteYn='0' and T1.disabledYn='0'
           <if test="@Ognl@isNotEmpty(refundCode)">
            AND T1.refundCode = #{refundCode}
           </if>
           <if test="@Ognl@isNotEmpty(orderCode)">
            AND T1.orderCode = #{orderCode}
           </if>
      </where>    
    </select>
    
    
</mapper>

