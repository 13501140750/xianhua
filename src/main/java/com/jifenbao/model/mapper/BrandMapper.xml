<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="Brand">
    
    <resultMap id="brandResult" type="brand">
        <result property="id" column="id" />
        <result property="code" column="code" />
        <result property="name" column="name" />
        <result property="alias" column="alias" />
        <result property="engName" column="engName" />
        <result property="description" column="description" />
        <result property="logo" column="logo" />
        <result property="hotYn" column="hotYn" />
        <result property="showYn" column="showYn" />
        <result property="sort" column="sort" />
        <result property="navcatCode" column="navcatCode" />
        <result property="deleteYn" column="deleteYn" />
        <result property="disabledYn" column="disabledYn" />
        <result property="createUser" column="createUser" />
        <result property="createTime" column="createTime" />
        <result property="updateUser" column="updateUser" />
        <result property="updateTime" column="updateTime" />
    </resultMap>
    
    <!-- 用于select查询公用抽取的列 -->
    <sql id="brandColumns">
        <![CDATA[
        T1.id,
        T1.code,
        T1.name,
        T1.alias,
        T1.engName,
        T1.description,
        T1.logo,
        T1.hotYn,
        T1.showYn,
        T1.sort,
        T1.navcatCode,
        T1.deleteYn,
        T1.disabledYn,
        T1.createUser,
        T1.createTime,
        T1.updateUser,
        T1.updateTime
        ]]>
    </sql>
    
    <!-- 查询from -->
    <sql id="dynamicFrom">
        FROM TBL_Brand T1
    </sql>
    
    <!-- 查询选择colum -->
    <sql id="dynamicSelect">
        SELECT
        <include refid="brandColumns" />
        <include refid="dynamicFrom" />
    </sql>
    
    <!-- 查询条件 -->
   
    <sql id="dynamicCondition">
        <!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用framework中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
        <if test="id != null">
            AND T1.id = #{id}
        </if>
        <if test="idEx != null">
            AND T1.id != #{idEx}
        </if>
        <if test="@Ognl@isNotEmpty(code)">
            AND T1.code = #{code}
        </if>
        <if test="@Ognl@isNotEmpty(name)">
            AND T1.name = #{name}
        </if>
        <if test="@Ognl@isNotEmpty(alias)">
            AND T1.alias = #{alias}
        </if>
        <if test="@Ognl@isNotEmpty(engName)">
            AND T1.engName = #{engName}
        </if>
        <if test="@Ognl@isNotEmpty(description)">
            AND T1.description = #{description}
        </if>
        <if test="@Ognl@isNotEmpty(logo)">
            AND T1.logo = #{logo}
        </if>
        <if test="@Ognl@isNotEmpty(hotYn)">
            AND T1.hotYn = #{hotYn}
        </if>
        <if test="@Ognl@isNotEmpty(showYn)">
            AND T1.showYn = #{showYn}
        </if>
        <if test="sort != null">
            AND T1.sort = #{sort}
        </if>
        <if test="@Ognl@isNotEmpty(navcatCode)">
            AND T1.navcatCode = #{navcatCode}
        </if>
        <if test="@Ognl@isNotEmpty(deleteYn)">
            AND T1.deleteYn = #{deleteYn}
        </if>
        <if test="@Ognl@isNotEmpty(disabledYn)">
            AND T1.disabledYn = #{disabledYn}
        </if>
        <if test="@Ognl@isNotEmpty(createUser)">
            AND T1.createUser = #{createUser}
        </if>
        <if test="@Ognl@isNotEmpty(updateUser)">
            AND T1.updateUser = #{updateUser}
        </if>
    </sql>
    
    <!-- 查询where条件 -->
    <sql id="dynamicWhere">
        <where>
            <include refid="dynamicCondition" />
        </where>
    </sql>
    
    <!-- 查询where条件(map) -->
    <sql id="dynamicWhereEx">
        <where>
            <include refid="dynamicCondition" />
            <if test="@Ognl@isNotEmpty(createTimeBegin)">
                <![CDATA[AND T1.createTime >= #{createTimeBegin}]]>
            </if>
            <if test="@Ognl@isNotEmpty(createTimeEnd)">
                <![CDATA[AND T1.createTime < date_add(#{createTimeEnd}, INTERVAL 1 DAY)]]>
            </if>
            <if test="@Ognl@isNotEmpty(updateTimeBegin)">
                <![CDATA[AND T1.updateTime >= #{updateTimeBegin}]]>
            </if>
            <if test="@Ognl@isNotEmpty(updateTimeEnd)">
                <![CDATA[AND T1.updateTime < date_add(#{updateTimeEnd}, INTERVAL 1 DAY)]]>
            </if>
             <if test="@Ognl@isNotEmpty(searchText)">
                <![CDATA[AND (T1.name like  CONCAT('%','${searchText}','%' )  or T1.code like  CONCAT('%','${searchText}','%' ))  ]]>
            </if>
        </where>
    </sql>

   
     <!-- 排序条件 -->
    <sql id="dynamicOrderBy">
        <choose>
            <when test="@Ognl@isNotEmpty(orderBy)">
                <trim suffix="" suffixOverrides="order by">
                <foreach collection="orderBy" item="order" open="order by " separator="," close=" ">
                <choose>
                    <when test="order.propertyName == 'id'">
                        T1.id <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'id'">
                        T1.id <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'code'">
                        T1.code <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'name'">
                       convert(T1.name using gbk)     <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'alias'">
                        T1.alias <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'engName'">
                        T1.engName <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'description'">
                        T1.description <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'logo'">
                        T1.logo <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'hotYn'">
                        T1.hotYn <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'showYn'">
                        T1.showYn <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'sort'">
                        T1.sort <if test="!order.ascending"> desc </if>
                    </when>
                     <when test="order.propertyName == 'navcatCode'">
                        T1.navcatCode <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'deleteYn'">
                        T1.deleteYn <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'disabledYn'">
                        T1.disabledYn <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'createUser'">
                        T1.createUser <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'createTime'">
                        T1.createTime <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'updateUser'">
                        T1.updateUser <if test="!order.ascending"> desc </if>
                    </when>
                    <when test="order.propertyName == 'updateTime'">
                        T1.updateTime <if test="!order.ascending"> desc </if>
                    </when>
                </choose>
                </foreach>
                </trim>
            </when>
            <otherwise>
            order by T1.id desc
            </otherwise>
        </choose>
    </sql>
    
    <!-- 单条录入  -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
            INSERT INTO TBL_Brand (
            code ,
            name ,
            alias ,
            engName ,
            description ,
            logo ,
            hotYn ,
            showYn ,
            sort ,
            navcatCode,
            deleteYn ,
            disabledYn ,
            createUser ,
            createTime ,
            updateUser ,
            updateTime 
            ) VALUES (
            #{code} ,
            #{name} ,
            #{alias} ,
            #{engName} ,
            #{description} ,
            #{logo} ,
            #{hotYn} ,
            #{showYn} ,
            #{sort} ,
            #{navcatCode},
            #{deleteYn} ,
            #{disabledYn} ,
            #{createUser} ,
            #{createTime} ,
            #{updateUser} ,
            #{updateTime} 
            )
        ]]>
        <selectKey resultType="java.lang.Long"
            order="AFTER"
            keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
    
    <!-- 批量录入  -->
    <insert id="insertBatch" parameterType="java.util.List">
        INSERT INTO TBL_Brand (
            code ,
            name ,
            alias ,
            engName ,
            description ,
            logo ,
            hotYn ,
            showYn ,
            sort ,
            navcatCode,
            deleteYn ,
            disabledYn ,
            createUser ,
            createTime ,
            updateUser ,
            updateTime 
            ) 
            VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.code} ,
            #{item.name} ,
            #{item.alias} ,
            #{item.engName} ,
            #{item.description} ,
            #{item.logo} ,
            #{item.hotYn} ,
            #{item.showYn} ,
            #{item.sort} ,
            #{item.navcatCode} ,
            #{item.deleteYn} ,
            #{item.disabledYn} ,
            #{item.createUser} ,
            #{item.createTime} ,
            #{item.updateUser} ,
            #{item.updateTime} 
            )
        </foreach>
    </insert>
    
    <!-- 单条修改  -->
    <update id="update">
        UPDATE TBL_Brand
        <set>
            <if test="@Ognl@isNotEmpty(code)">
                code = #{code},
            </if>
            <if test="@Ognl@isNotEmpty(name)">
                name = #{name},
            </if>
            <if test="alias != null">
                alias = #{alias},
            </if>
            <if test="engName != null">
                engName = #{engName},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="@Ognl@isNotEmpty(logo)">
                logo = #{logo},
            </if>
            <if test="@Ognl@isNotEmpty(hotYn)">
                hotYn = #{hotYn},
            </if>
            <if test="@Ognl@isNotEmpty(showYn)">
                showYn = #{showYn},
            </if>
            <if test="sort != null">
                sort = #{sort},
            </if>
            <if test="@Ognl@isNotEmpty(navcatCode)">
                navcatCode = #{navcatCode},
            </if>
            <if test="@Ognl@isNotEmpty(deleteYn)">
                deleteYn = #{deleteYn},
            </if>
            <if test="@Ognl@isNotEmpty(disabledYn)">
                disabledYn = #{disabledYn},
            </if>
            <if test="@Ognl@isNotEmpty(createUser)">
                createUser = #{createUser},
            </if>
            <if test="createTime != null">
                createTime = #{createTime},
            </if>
            <if test="@Ognl@isNotEmpty(updateUser)">
                updateUser = #{updateUser},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime}
            </if>
        </set>
        WHERE 
            id = #{id}
    </update>
    
    <!-- 单条修改所有属性  -->
    <update id="updateAll">
    <![CDATA[
        UPDATE TBL_Brand SET
            code = #{code} ,
            name = #{name} ,
            alias = #{alias} ,
            engName = #{engName} ,
            description = #{description} ,
            logo = #{logo} ,
            hotYn = #{hotYn} ,
            showYn = #{showYn} ,
            sort = #{sort} ,
            navcatCode = #{navcatCode},
            deleteYn = #{deleteYn} ,
            disabledYn = #{disabledYn} ,
            createUser = #{createUser} ,
            createTime = #{createTime} ,
            updateUser = #{updateUser} ,
            updateTime = #{updateTime} 
        WHERE 
            id = #{id} 
    ]]>
    </update>

    <!-- 删除主键  -->
    <delete id="deleteByPK">
    <![CDATA[
        DELETE FROM TBL_Brand WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <!-- 删除主键数组  -->
    <delete id="deleteByArrPK" parameterType="java.util.List">
        <![CDATA[DELETE FROM TBL_Brand WHERE]]>
        <foreach collection="list" item="item" index="index" open="id in (" separator="," close=")">
            <![CDATA[#{item}]]>
        </foreach>
    </delete>
    
    <!-- 删除条件  -->
    <delete id="delete">
        <![CDATA[DELETE T1 FROM TBL_Brand T1 ]]>
        <include refid="dynamicWhere" />
    </delete>
    
    <!-- 主键查询  -->
    <select id="selectByPK" parameterType="java.lang.Long" resultMap="brandResult">
        <include refid="dynamicSelect" />
        <![CDATA[
            WHERE 
            T1.id = #{id} 
        ]]>
    </select>
    
    <!-- 查询是否存在主键 -->
    <select id="existsByPK" parameterType="java.lang.Long"
        resultType="boolean">
        SELECT min(1)
        <include refid="dynamicFrom" />
        <![CDATA[
        WHERE
        T1.id = #{id} 
        ]]>
    </select>
    
    <!-- 查询是否存在对象 -->
    <select id="exists" parameterType="brand"
        resultType="boolean">
        SELECT min(1)
        <include refid="dynamicFrom" />
        <include refid="dynamicWhere" />
    </select>
    
    <!-- 查询总数 -->
    <select id="count" resultType="int">
        SELECT count(1)
        <include refid="dynamicFrom" />
        <include refid="dynamicWhere" />
    </select>
    
    <!-- 查询总数参数Map -->
    <select id="countByMap" resultType="int" parameterType="map">
        SELECT count(1)
        <include refid="dynamicFrom" />
        <include refid="dynamicWhereEx" />
    </select>
    
    <!-- 分页查询数量 -->
    <select id="pageCount" resultType="int"
        parameterType="map">
        SELECT count(1)
        <include refid="dynamicFrom" />
        <include refid="dynamicWhereEx" />
    </select>
    
    <!-- 分页查询 -->
    <select id="pageQuery" resultMap="brandResult"
        parameterType="map">
        <include refid="Common.pageStart" />
        <include refid="dynamicSelect" />
        <include refid="dynamicWhereEx" />
        <include refid="dynamicOrderBy" />
        <include refid="Common.pageEnd" />
    </select>

    <!-- 查询条件Map -->
    <select id="selectByMap" resultMap="brandResult"
        parameterType="map">
        <include refid="dynamicSelect" />
        <include refid="dynamicWhereEx" />
        <include refid="dynamicOrderBy" />
    </select>

    <!-- 查询条件对象 -->
    <select id="select" resultMap="brandResult"
        parameterType="brand">
        <include refid="dynamicSelect" />
        <include refid="dynamicWhere" />
        order by T1.id desc
    </select>

    <!-- 查询条件拼接 -->
    <select id="selectByCriteria" resultMap="brandResult"
        parameterType="map">
        <include refid="Common.pageStart" />
        <include refid="dynamicSelect" />
        <if test="_parameter != null">
            <include refid="Common.criteria_Where_Clause" />
        </if>
        <include refid="dynamicOrderBy" />
        <include refid="Common.pageEnd" />
    </select>
    
    <!-- 根据父类目的code查询子类目 -->
    <select id="getMaxCatCode" resultType="String">
        select  code  from TBL_Brand  T2  WHERE
         T2.id = (select max(id) from TBL_Brand )
        order by id desc
    </select>
    
</mapper>

